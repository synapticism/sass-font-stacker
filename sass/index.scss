// ==== FONT STACKER ==== //

// Set a default font stack; if you see monospaced type something probably went wrong ;)
$k-font-stack-default: courier;

// Font stack definitions
$k-font-stacks: (

  // == SERIF == //

  baskerville:      (Baskerville, "Baskerville Old Face", Utopia, "Hoefler Text", "Times New Roman", "DejaVu Serif", "Liberation Serif", Tinos, serif),
  big-caslon:       ("Big Caslon", "Book Antiqua", Bookman, Palatino, "Palatino Linotype", "Palatino LT STD", "URW Palladio L", "DejaVu Serif", Georgia, serif),
  bodini-mt:        ("Bodoni MT", Didot, "Didot LT STD", "Times New Roman", "DejaVu Serif", "Liberation Serif", Tinos, serif),
  book-antiqua:     ("Book Antiqua", Palatino, "Palatino Linotype", "Palatino LT STD", "URW Palladio L", "DejaVu Serif", Georgia, serif),
  calisto-mt:       ("Calisto MT", "Bookman Old Style", Bookman, "Goudy Old Style", "Hoefler Text", "Bitstream Charter", Charter, "DejaVu Serif", Georgia, serif),
  cambria:          (Cambria, "Hoefler Text", Utopia, "DejaVu Serif", "Liberation Serif", Georgia, serif),
  constantia:       (Constantia, "Lucida Bright", "Lucida Serif", Lucida, "DejaVu Serif", "Liberation Serif", Georgia, serif),
  didot:            (Didot, "Didot LT STD", "Times New Roman", "DejaVu Serif", "Liberation Serif", Tinos, serif),
  garamond:         (Garamond, Garamond-Normal, Baskerville, "Baskerville Old Face", Utopia, "Times New Roman", "DejaVu Serif", "Liberation Serif", serif),
  georgia:          (Georgia, Palatino, "Palatino Linotype", "Palatino LT STD", "URW Palladio L", "Book Antiqua", "DejaVu Serif", serif),
  goudy:            ("Goudy Old Style", "Hoefler Text", "Times New Roman", "DejaVu Serif", "Liberation Serif", Tinos, serif),
  hoefler:          ("Hoefler Text", Baskerville, "Baskerville Old Face", "Times New Roman", "DejaVu Serif", "Liberation Serif", Tinos, serif),
  lucida-bright:    ("Lucida Bright", Lucidabright, "Lucida Serif", Lucida, "DejaVu Serif", "Liberation Serif", Tinos, serif),
  palatino:         (Palatino, "Palatino Linotype", "Palatino LT STD", "URW Palladio L", "Book Antiqua", "DejaVu Serif", Georgia, serif),
  times:            ("Times New Roman", TimesNewRoman, "DejaVu Serif", "Liberation Serif", Tinos, Times, serif),



  // == SANS-SERIF == //

  arial:            (Arial, "Helvetica Neue", Helvetica, "Nimbus Sans L", "Liberation Sans", Arimo, sans-serif),
  calibri:          (Calibri, Candara, "Gill Sans", "Gill Sans MT", "DejaVu Sans", Verdana, Geneva, sans-serif),
  candara:          (Candara, Calibri, "Gill Sans", "Gill Sans MT", "DejaVu Sans", Verdana, Geneva, sans-serif),
  century:          ("Century Gothic", "Apple Gothic", AppleGothic, "URW Gothic L", Avantgarde, "DejaVu Sans", Tahoma, sans-serif),
  corbel:           (Corbel, "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Verdana, Geneva, sans-serif),
  frutiger:         (Frutiger, "Frutiger Linotype", Calibri, "Gill Sans", "Gill Sans MT", "DejaVu Sans", Verdana, Geneva, sans-serif),
  futura:           (Futura, Futura-Medium, "Futura Medium", Avantgarde, "Century Gothic", "Apple Gothic", AppleGothic, "URW Gothic L", "DejaVu Sans", Tahoma, sans-serif),
  geneva:           (Geneva, Verdana, "DejaVu Sans", sans-serif),
  gill-sans:        ("Gill Sans", "Gill Sans MT", Calibri, "DejaVu Sans", Verdana, Geneva, sans-serif),
  helvetica:        ("Helvetica Neue", Helvetica, Arial, "Nimbus Sans L", "Liberation Sans", Arimo, sans-serif),
  helvetica-light:  ("HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Nimbus Sans L", "Liberation Sans", Arimo, sans-serif),
  lucida-grande:    ("Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Verdana, Geneva, sans-serif),
  myriad:           ("Myriad Web", "Myriad Pro", Myriad, "Gill Sans", "Gill Sans MT", "DejaVu Sans", Verdana, Geneva, sans-serif),
  optima:           (Optima, Segoe, "Segoe UI", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Verdana, Geneva, sans-serif),
  segoe:            (Segoe, "Segoe UI", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Verdana, Geneva, sans-serif),
  system-sans:      (-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif),
  tahoma:           (Tahoma, "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Verdana, Geneva, sans-serif),
  trebuchet:        ("Trebuchet MS", Futura, "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "DejaVu Sans", Tahoma, sans-serif),
  verdana:          (Verdana, Geneva, "DejaVu Sans", sans-serif),
  ubuntu:           (Ubuntu, "Myriad Web", "Myriad Pro", Myriad, "Gill Sans", "Gill Sans MT", "DejaVu Sans", Verdana, Geneva, sans-serif),



  // == DISPLAY == //

  comic-sans:       ("Comic Neue", "Comic Sans MS", "Comic Sans", Chalkboard, "ChalkboardSE-Regular", "Marker Felt", Purisa, "URW Chancery L", cursive), // http://www.mcdruid.co.uk/content/cursive-font-stack :)
  impact:           (Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans-serif),
  papyrus:          (Papyrus, "ITC Papyrus", fantasy), // :D



  // == MONOSPACE == //

  andale:           ("Andale Mono WT", "Andale Mono", Menlo, "Lucida Console", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace),
  consolas:         (Consolas, "Andale Mono WT", "Andale Mono", Menlo, "Lucida Console", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace),
  courier:          ("Courier New", Courier, "Courier 10 Pitch", "Liberation Mono", "Nimbus Mono L", "Cousine", monospace),
  menlo:            (Menlo, Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace),
  typewriter:       ("Lucida Sans Typewriter", "Lucida Typewriter", "Courier New", Courier, "Courier 10 Pitch", "Liberation Mono", "Nimbus Mono L", "Cousine", monospace),
  ubuntu-mono:      ("Ubuntu Mono", Monaco, Consolas, "Lucida Console", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", monospace),



  // == CHINESE == //

  // Songti: similar to serif; think Times New Roman
  zh-songti-sc:     ("Songti SC", STSong, 华文宋体, 宋体, SimSun, 新宋体, NSimSun, "AR PL New Sung", "AR PL SungtiL GB", serif),
  zh-songti-tc:     ("LiSong Pro", "Apple LiSung", 新細明體, PMingLiU, MingLiU, "AR PL Mingti2L", "TW\-Sung", serif),

  // Heiti: similar to sans-serif; think Helvetica/Arial
  zh-heiti-sc:      ("Heiti SC", "Microsoft YaHei New", "Microsoft Yahei", 微软雅黑, SimHei, 黑体, "STHeiti Light", STXihei, 华文细黑, STHeiti, 华文黑体, "WenQuanYi Zen Hei", sans-serif),
  zh-heiti-tc:      ("Heiti TC", "Microsoft JhengHei", 微軟正黑體, sans-serif),

  // Kaiti: a regular brush script
  zh-kaiti-sc:      ("Kaiti SC", KaiTi, 楷体, STKaiti, 华文楷体, Kai, "AR PL UKai CN", serif),
  zh-kaiti-tc:      ("BiauKai", "DFKai-SB", "AR PL KaitiM", "AR PL KaitiM GB", "AR PL UKai HK", "AR PL UKai TW", "TW\-Kai", serif),

  // Fangsongti: stylized brush script; a fusion of kaiti and songti styles; only available for simplified Chinese insofar as I can tell
  zh-fangsong-sc:   (FangSong, "Fang Song", 仿宋, STFangSong, 华文仿宋, serif),



  // == BASICS == //

  // For use with `k-font-stack-trim`)
  cursive:          (cursive),
  fantasy:          (fantasy),
  monospace:        (monospace),
  sans-serif:       (sans-serif),
  serif:            (serif)
);



// Font stacker function; accepts an arbitrary list of font names (including none at all); requires the name of a valid font stack from the list above as the last or only argument
@function k-font-stack($fonts...) {

  // Assume the target stack is the last value in the arglist; break it off into a string
  $stack: nth($fonts, -1);

  // Remove the last value from the arglist to avoid duplication or create an empty list as needed
  @if length($fonts) > 1 {
    $fonts: set-nth($fonts, -1, null);
  } @else {
    $fonts: ();
  }

  // Check to see if the stack exists and return the combined list; fallback to the default if nothing else
  @if map-has-key($k-font-stacks, $stack) {
    @return join($fonts, map-get($k-font-stacks, $stack), comma);
  } @else {
    @warn "Font stack not found: '#{$stack}'.";
    @if map-has-key($k-font-stacks, $k-font-stack-default) {
      @return join($fonts, map-get($k-font-stacks, $stack), comma);
    }
  }

  // Font stack could not be found and default could not be loaded (since we're still here); issue another warning
  @warn "Font stacks could not be loaded.";

  // Don't just sit there, do something!
  @return monospace;
}



// Return a font stack without the generic term; used mainly to customize fallback fonts or add CJW fonts to the stack
@function k-font-stack-trim($stack) {
  @if map-has-key($k-font-stacks, $stack) {
    @return set-nth(map-get($k-font-stacks, $stack), -1, null);
  }
  @warn "Font stack not found: '#{$stack}'.";
  @return ();
}



// A simple wrapper to output the complete font family declaration
@mixin k-font-family($fonts...) {
  font-family: font-stack($fonts...);
}
